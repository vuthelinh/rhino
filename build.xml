<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="install" name="rhino">
	<property environment="env"/>
	<property name="debuglevel" 		value="source,lines,vars"/>
	<property name="target"    			value="1.8"/>
	<property name="source"    			value="1.8"/>
	
	<property name="user.home" 			value="${user.home}"/>
	<property name="user.repository" 	value="${user.home}/.m2"/>

	<property name="ws.home"   			value="${basedir}"/>
	<property name="ws.bin"    			value="${ws.home}/bin"/>
	<property name="ws.src"    			value="${ws.home}/src"/>
	
	<!-- Setting.properties -->
	<property name="selenium.host"      value=""/>
	<property name="selenium.browser"   value="firefox"/>
	<property name="selenium.timeout"   value="61"/>
	<property name="capture.mode"       value="ON"/>
	<property name="selenium.suite"     value=""/>
	<property name="selenium.report"    value=""/>
	<property name="web.driver.ie"      value="${user.repository}/IEDriverServer.exe"/>
	<property name="web.driver.chrome"  value="${user.repository}/chromedriver.exe"/>
	

	<path id="testcase.path">
		<pathelement location="${ws.bin}"/>
		<fileset dir="${user.repository}">
			<include name="**.jar"/>
		</fileset>
	</path>

	<target name="setClassPath" unless="project.classpath" >
		<path id="classpath_jars">
			<fileset dir="${user.repository}" includes="**.*jar"/>
		</path>
		<pathconvert pathsep=":" 
	            property="project.classpath" 
	            refid="classpath_jars"/>
	</target>

	<!-- init -->
	<target name="init" depends="setClassPath">
		
		<propertyfile file="log\log4j.properties">
			<entry  key="log4j.appender.dest1.File" value="${selenium.report}\log4j.log"/>
		</propertyfile>
		
		<mkdir dir="${ws.bin}"/>
		<mkdir dir="${selenium.report}"/>

		<!-- copy **.xlsx to src\bin -->
		<copy includeemptydirs="false" todir="${ws.bin}" flatten="true">
			<fileset dir="${selenium.suite}">
				<include name="**/*.xlsx"/>
			</fileset>
		</copy>
		
		<!-- copy log4j.properties to src\bin -->
		<copy includeemptydirs="false" todir="${ws.bin}">
			<fileset dir="log">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		
		<tstamp>
			<format property="start.time" pattern="MM/dd/yyyy hh:mm aa" />
		</tstamp>

		<condition property="ANT" 
		            value="${env.ANT_HOME}/bin/ant.bat" 
		            else="${env.ANT_HOME}/bin/ant">
			<os family="windows" />
		</condition>
	</target>

	<!-- clean -->
	<target name="clean">
		<delete dir="${ws.bin}"/>
		<delete dir="${selenium.report}"/>
	</target>

	<!-- compile -->
	<target name="compile" depends="init" >
		<javac 
            debug="true" 
            destdir="${ws.bin}" 
            srcdir="${ws.src}" 
            target="1.7" 
            classpath="${project.classpath}" includeAntRuntime="no"
        >
		</javac>
		<copy todir="${ws.bin}">
			<fileset dir="${ws.src}" excludes="**/*.java"/>
		</copy>
	</target>

	<!-- execute test -->
	<target name="run" depends="compile,update_lib"  >

		<propertyfile file="log\log4j.properties">
			<entry  key="log4j.appender.dest1.File" value="${selenium.report}\log4j.log"/>
		</propertyfile>

		<propertyfile file="Setting.properties" comment="My properties">
			<entry  key="selenium.host" 	 	value="${selenium.host}"/>
			<entry  key="selenium.browser" 		value="${selenium.browser}"/>
			<entry  key="selenium.report" 		value="${selenium.report}"/>
			<entry  key="capture_mode" 	 		value="${capture.mode}"/>
			<entry  key="selenium.timeout" 		value="${selenium.timeout}"/>
			<entry  key="webdriver_ie" 	 		value="${web.driver.ie}"/>
			<entry  key="webdriver_chrome" 		value="${web.driver.chrome}"/>
		</propertyfile>

		<java classname="com.rhino.testRunner.DriverScript" classpath="${ws.bin}" classpathref="testcase.path"/>
	</target>

	<!-- create report -->
	<target name="install" depends="run" >
		<java classname="com.rhino.utility.ReportUtil" classpath="${ws.bin}" classpathref="testcase.path" />

		<move todir="${selenium.report}/test-output">
			<fileset dir="${ws.home}/test-output"/>
		</move>

	</target>
	
	<!-- update keyword -->
	<property name="keyword.update" value=""/>
	<target name="keyword_update" depends="compile" >
		
		<propertyfile file="Setting.properties" comment="My properties">
					<entry  key="keyword.update" value="${keyword.update}"/>
		</propertyfile>
		
		<java classname="com.rhino.utility.UpdateVersion" classpath="${ws.bin}" classpathref="testcase.path" />
	</target>

	<!-- download webdriver -->
	<target name="download_webdriver">
		<get dest="${user.repository}" skipexisting="true" verbose="on">
			<url url="http://selenium-release.storage.googleapis.com/2.41/IEDriverServer_Win32_2.41.0.zip"/>
			<!--<url url="http://selenium-release.storage.googleapis.com/2.41/IEDriverServer_x64_2.41.0.zip"/>-->
			<url url="http://chromedriver.storage.googleapis.com/2.9/chromedriver_win32.zip "/>
		</get>
		<unzip src="${user.repository}/IEDriverServer_Win32_2.41.0.zip" dest="${user.repository}"/>
		<unzip src="${user.repository}/chromedriver_win32.zip" dest="${user.repository}"/>
	</target>

	<!-- update library -->
	<target name="update_lib" depends="download_webdriver">
		<mkdir dir="${user.repository}"/>
		<get dest="${user.repository}" skipexisting="true" verbose="on">
			<!-- selenium-java-2.41.0 -->
			<!-- Sikuli -->
			<url url="http://central.maven.org/maven2/org/sikuli/sikuli-api/1.1.0/sikuli-api-1.1.0.jar"/>
			<url url="http://central.maven.org/maven2/org/sikuli/sikuli-webdriver/1.0.1/sikuli-webdriver-1.0.1.jar"/>
			<url url="http://central.maven.org/maven2/org/sikuli/sikuli-slides-api/1.4.0/sikuli-slides-api-1.4.0.jar"/>
			<url url="http://central.maven.org/maven2/org/sikuli/sikuli-core/1.1.3/sikuli-core-1.1.3.jar"/>
			<url url="http://central.maven.org/maven2/com/github/yroffin/jbehaviour-sikuli/0.0.1/jbehaviour-sikuli-0.0.1.jar"/>
			
		</get>
	</target>
</project>
